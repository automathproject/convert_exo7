import { JSONSchema7TypeName, JSONSchema7 } from 'json-schema';
import { DatatypeInterface } from '../../../../typings';
/**
 * Data type.
 */
export declare class Datatype {
    /**
     * Datatype name.
     */
    datatype?: string;
    /**
     * Width (in bytes) for integer types.
     */
    width?: number;
    /**
     * Length of year type or length of a number
     * including decimals (for numeric types).
     */
    digits?: number;
    /**
     * Length of decimal portion of a number (for numeric types).
     */
    decimals?: number;
    /**
     * Length property for bit, textual and blob types.
     */
    length?: number;
    /**
     * Fractional length for date types.
     */
    fractional?: number;
    /**
     * Possible values for enum and set.
     */
    values?: string[];
    /**
     * Whether datatype is unsigned.
     */
    isUnsigned?: boolean;
    /**
     * Create Datatype instance from compact JSON format.
     *
     * @param json Datatype in compact JSON format.
     */
    static fromCompactJson(json: DatatypeInterface): Datatype;
    /**
     * Get standardized name for datatype, according to parsed compact JSON type.
     *
     * @param type Datatype parsed from compact JSON format.
     */
    static filterDatatype(type: string): JSONSchema7TypeName;
    /**
     * JSON casting of this object calls this method.
     * Perform some special formattings according to the datatype.
     *
     * No special operations are needed with datatypes:
     * - double (rules depends on hardware)
     * - bit (string with no limitations)
     * - boolean (simple boolean)
     * - timestamp (simple integer)
     * - blob (lengths are ignored)
     * - geometry (too complex for JSON Schema)
     * - point (too complex for JSON Schema)
     * - linestring (too complex for JSON Schema)
     * - polygon (too complex for JSON Schema)
     * - multipoint (too complex for JSON Schema)
     * - multilinestring (too complex for JSON Schema)
     * - multipolygon (too complex for JSON Schema)
     * - geometrycollection (too complex for JSON Schema)
     * - json (too complex for JSON Schema)
     */
    toJSON(): JSONSchema7;
}
